kind: pipeline
name: default
type: kubernetes
steps:
  - name: install
    image: node:18
    commands:
      - npm ci

  - name: test
    image: node:18
    commands:
      - npm test

  - name: audit
    image: node:18
    commands:
      - npm audit --audit-level=high --production

  - name: docker build
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      # wait for docker service to be up before running docker build
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - docker build -t html-pdf-converter .

  - name: image_to_quay
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    environment:
      DOCKER_PASSWORD:
        from_secret: DOCKER_PASSWORD
    commands:
      - docker login -u="ukhomeofficedigital+html_pdf_converter" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag html-pdf-converter quay.io/ukhomeofficedigital/html-pdf-converter:$${DRONE_TAG}
      - docker push quay.io/ukhomeofficedigital/html-pdf-converter:$${DRONE_TAG}
    when:
      branch: master
      event: [push, pull_request]

  - name: scan-image
    pull: Always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: quay.io/ukhomeofficedigital/html-pdf-converter:$${DRONE_TAG}
      TOLERATE: MEDIUM,HIGH,CRITICAL
      FAIL_ON_DETECTION: false
      IGNORE_UNFIXED: true
      ALLOW_CVE_LIST_FILE: trivy-cve-exceptions.txt
    when:
      event:
        - pull_request
        - push
        - tag

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi

      

